name: Build Projects
on:
 - push
 - pull_request

jobs:
  test:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4.1.1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
  build:
    strategy:
      matrix:
        opt:
          - target: StandaloneLinux64	#Build a Linux 64-bit standalone.
            out: linux
            os: ubuntu-latest
          - target: StandaloneWindows64	#Build a Windows 64-bit standalone.
            out: x64-win
            os: ubuntu-latest
          - target: StandaloneWindows	#Build a Windows standalone.
            out: x86-win
            os: ubuntu-latest
          - target: StandaloneOSX	#Build a macOS standalone (Intel 64-bit).
            out: osx
            os: ubuntu-latest
          - target: iOS	#Build an iOS player.
            out: ios
            os: ubuntu-latest
          - target: Android	#Build an Android .apk standalone app.
            out: android
            os: ubuntu-latest
          - target: WebGL	#Build to WebGL platform.
            out: webgl
            os: ubuntu-latest
          # - target: WSAPlayer	#Build an Windows Store Apps player.
          #   out: uwp
          #   os: windows-latest
    runs-on: ${{ matrix.opt.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
         targetPlatform: ${{ matrix.opt.target }}

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: gwc-${{ matrix.opt.out }}
          path: build
