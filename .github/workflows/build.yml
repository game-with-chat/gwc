name: Build Projects
on:
  - push

    
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - StandaloneLinux64
          - StandaloneWindows64
          -  StandaloneWindows
          -  StandaloneOSX
          # - iOS
          - Android
          - WebGL
          # - WSAPlayer
          - Server
    name: ${{ matrix.target }}
    timeout-minutes: 60
    continue-on-error: ${{ github.ref == 'refs/heads/develop' && matrix.target != 'WebGL' }}
    runs-on: ${{ matrix.target == 'StandaloneOSX' && 'macos-latest' || 'ubuntu-latest' }}
    steps:
      - name: Clean the VM
        uses: jlumbroso/free-disk-space@main
        if: matrix.target != 'StandaloneOSX'
        with:
          tool-cache: false
          android: false
          dotnet: false
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Import from Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.target }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.target }}-
            Library-
      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
         buildName: gwc
         targetPlatform: ${{ matrix.target == "Server" && "StandaloneLinux64" || matrix.target }}
         allowDirtyBuild: true
         customParameters: ${{ matrix.target == 'Server" && '-standaloneBuildSubtarget Server' || '' }}

      - uses: actions/upload-artifact@v4
        name: "Upload ${{ matrix.target == 'Android' && 'Android Package (.apk)' || matrix.target == 'StandaloneOSX' && 'Bundle (.app)' || matrix.target == 'WebGL' && 'Web Client Archive' || 'Executable' }}"
        if: matrix.target != 'WebGL' || github.ref != 'refs/heads/develop'
        id: upload
        with:
          name: ${{matrix.target}}
          path: build/${{matrix.target}}${{ matrix.target == 'Android' && '/gwc.apk'  || matrix.target == 'WebGL' && '/gwc' || '' }}

      - uses: actions/upload-pages-artifact@v2
        name: "${{ matrix.target == 'WebGL' && 'Upload GitHub Pages Artifact' || '(n/a)' }}"
        if: matrix.target == 'WebGL'
        with:
          path: "build/WebGL/gwc"


  gh-pages:
    name: GitHub Pages
    if: github.ref == 'refs/heads/develop'
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}

    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v2
